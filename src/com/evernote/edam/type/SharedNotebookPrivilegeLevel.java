/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.evernote.edam.type;


import java.util.Map;
import java.util.HashMap;
import com.evernote.thrift.TEnum;

/**
 * Privilege levels for accessing shared notebooks.
 * 
 * READ_NOTEBOOK: Recipient is able to read the contents of the shared notebook
 *   but does to have access to information about other recipients of the
 *   notebook or the activity stream information.
 * 
 * MODIFY_NOTEBOOK_PLUS_ACTIVITY: Recipient has rights to read and modify the contents
 *   of the shared notebook, including the right to move notes to the trash and to create
 *   notes in the notebook.  The recipient can also access information about other
 *   recipients and the activity stream.
 * 
 * READ_NOTEBOOK_PLUS_ACTIVITY: Recipient has READ_NOTEBOOK rights and can also
 *   access information about other recipients and the activity stream.
 * 
 * GROUP: If the user belongs to a group, such as a Business, that has a defined
 *   privilege level, use the privilege level of the group as the privilege for
 *   the individual.
 * 
 * FULL_ACCESS: Recipient has full rights to the shared notebook and recipient lists,
 *   including privilege to revoke and create invitations and to change privilege
 *   levels on invitations for individuals.  This privilege level is primarily intended
 *   for use by individual shares.
 * 
 * BUSINESS_FULL_ACCESS: Intended for use with Business Notebooks, a
 * BUSINESS_FULL_ACCESS level is FULL_ACCESS with the additional rights to
 * change how the notebook will appear in the business library, including the
 * rights to publish and unpublish the notebook from the library.
 */
public enum SharedNotebookPrivilegeLevel implements TEnum {
  READ_NOTEBOOK(0),
  MODIFY_NOTEBOOK_PLUS_ACTIVITY(1),
  READ_NOTEBOOK_PLUS_ACTIVITY(2),
  GROUP(3),
  FULL_ACCESS(4),
  BUSINESS_FULL_ACCESS(5);

  private final int value;

  private SharedNotebookPrivilegeLevel(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static SharedNotebookPrivilegeLevel findByValue(int value) { 
    switch (value) {
      case 0:
        return READ_NOTEBOOK;
      case 1:
        return MODIFY_NOTEBOOK_PLUS_ACTIVITY;
      case 2:
        return READ_NOTEBOOK_PLUS_ACTIVITY;
      case 3:
        return GROUP;
      case 4:
        return FULL_ACCESS;
      case 5:
        return BUSINESS_FULL_ACCESS;
      default:
        return null;
    }
  }
}
