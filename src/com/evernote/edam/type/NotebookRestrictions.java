/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.evernote.edam.type;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;

import com.evernote.thrift.*;
import com.evernote.thrift.protocol.*;

/**
 * This structure captures information about the types of operations
 * that cannot be performed on a given notebook with a type of
 * authenticated access and credentials.  The values filled into this
 * structure are based on then-current values in the server database
 * for shared notebooks and notebook publishing records, as well as
 * information related to the authentication token.  Information from
 * the authentication token includes the application that is accessing
 * the server, as defined by the permissions granted by consumer (api)
 * key, and the method used to obtain the token, for example via
 * authenticateToSharedNotebook, authenticateToBusiness, etc.  Note
 * that changes to values in this structure that are the result of
 * shared notebook or publishing record changes are communicated to
 * the client via a change in the notebook USN during sync.  It is
 * important to use the same access method, parameters, and consumer
 * key in order obtain correct results from the sync engine.
 * 
 * The server has the final say on what is allowed as values may
 * change between calls to obtain NotebookRestrictions instances
 * and to operate on data on the service.
 * 
 * If the following are set and true, then the given restriction is
 * in effect, as accessed by the same authentication token from which
 * the values were obtained.
 * 
 * <dt>noReadNotes</dt>
 *   <dd>The client is not able to read notes from the service and
 *   the notebook is write-only.
 *   </dd>
 * <dt>noCreateNotes</dt>
 *   <dd>The client may not create new notes in the notebook.
 *   </dd>
 * <dt>noUpdateNotes</dt>
 *   <dd>The client may not update notes currently in the notebook.
 *   </dd>
 * <dt>noExpungeNotes</dt>
 *   <dd>The client may not expunge notes currently in the notebook.
 *   </dd>
 * <dt>noShareNotes</dt>
 *   <dd>The client may not share notes in the notebook via the
 *   shareNote method.
 *   </dd>
 * <dt>noEmailNotes</dt>
 *   <dd>The client may not e-mail notes via the Evernote service by
 *   using the emailNote method.
 *   </dd>
 * <dt>noSendMessageToRecipients</dt>
 *   <dd>The client may not send messages to the share recipients of
 *   the notebook.
 *   </dd>
 * <dt>noUpdateNotebook</dt>
 *   <dd>The client may not update the Notebook object itself, for
 *   example, via the updateNotebook method.
 *   </dd>
 * <dt>noExpungeNotebook</dt>
 *   <dd>The client may not expunge the Notebook object itself, for
 *   example, via the expungeNotebook method.
 *   </dd>
 * <dt>noSetDefaultNotebook</dt>
 *   <dd>The client may not set this notebook to be the default notebook.
 *   The caller should leave Notebook.defaultNotebook unset.
 *   </dd>
 * <dt>noSetNotebookStack</dt>
 *   <dd>If the client is able to update the Notebook, the Notebook.stack
 *   value may not be set.
 *   </dd>
 * <dt>noPublishToPublic</dt>
 *   <dd>The client may not change the publish the notebook to the public.
 *   For example, business notebooks may not be shared publicly.
 *   </dd>
 * <dt>noPublishToBusinessLibrary</dt>
 *   <dd>The client may not publish the notebook to the business library.
 *   </dd>
 * <dt>noCreateTags</dt>
 *   <dd>The client may not complete an operation that results in a new tag
 *   being created in the owner's account.
 *   </dd>
 * <dt>noUpdateTags</dt>
 *   <dd>The client may not update tags in the owner's account.
 *   </dd>
 * <dt>noExpungeTags</dt>
 *   <dd>The client may not expunge tags in the owner's account.
 *   </dd>
 * <dt>noSetParentTag</dt>
 *   <dd>If the client is able to create or update tags in the owner's account,
 *   then they will not be able to set the parent tag.  Leave the value unset.
 *   </dd>
 * <dt>noCreateSharedNotebooks</dt>
 *   <dd>The client is unable to create shared notebooks for the notebook.
 *   </dd>
 * <dt>updateWhichSharedNotebookRestrictions</dt>
 *   <dd>Restrictions on which shared notebook instances can be updated.  If the
 *   value is not set or null, then the client can update any of the shared notebooks
 *   associated with the notebook on which the NotebookRestrictions are defined.
 *   See the enumeration for further details.
 *   </dd>
 * <dt>expungeWhichSharedNotebookRestrictions</dt>
 *   <dd>Restrictions on which shared notebook instances can be expunged.  If the
 *   value is not set or null, then the client can expunge any of the shared notebooks
 *   associated with the notebook on which the NotebookRestrictions are defined.
 *   See the enumeration for further details.
 *   </dd>
 */
public class NotebookRestrictions implements TBase<NotebookRestrictions>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("NotebookRestrictions");

  private static final TField NO_READ_NOTES_FIELD_DESC = new TField("noReadNotes", TType.BOOL, (short)1);
  private static final TField NO_CREATE_NOTES_FIELD_DESC = new TField("noCreateNotes", TType.BOOL, (short)2);
  private static final TField NO_UPDATE_NOTES_FIELD_DESC = new TField("noUpdateNotes", TType.BOOL, (short)3);
  private static final TField NO_EXPUNGE_NOTES_FIELD_DESC = new TField("noExpungeNotes", TType.BOOL, (short)4);
  private static final TField NO_SHARE_NOTES_FIELD_DESC = new TField("noShareNotes", TType.BOOL, (short)5);
  private static final TField NO_EMAIL_NOTES_FIELD_DESC = new TField("noEmailNotes", TType.BOOL, (short)6);
  private static final TField NO_SEND_MESSAGE_TO_RECIPIENTS_FIELD_DESC = new TField("noSendMessageToRecipients", TType.BOOL, (short)7);
  private static final TField NO_UPDATE_NOTEBOOK_FIELD_DESC = new TField("noUpdateNotebook", TType.BOOL, (short)8);
  private static final TField NO_EXPUNGE_NOTEBOOK_FIELD_DESC = new TField("noExpungeNotebook", TType.BOOL, (short)9);
  private static final TField NO_SET_DEFAULT_NOTEBOOK_FIELD_DESC = new TField("noSetDefaultNotebook", TType.BOOL, (short)10);
  private static final TField NO_SET_NOTEBOOK_STACK_FIELD_DESC = new TField("noSetNotebookStack", TType.BOOL, (short)11);
  private static final TField NO_PUBLISH_TO_PUBLIC_FIELD_DESC = new TField("noPublishToPublic", TType.BOOL, (short)12);
  private static final TField NO_PUBLISH_TO_BUSINESS_LIBRARY_FIELD_DESC = new TField("noPublishToBusinessLibrary", TType.BOOL, (short)13);
  private static final TField NO_CREATE_TAGS_FIELD_DESC = new TField("noCreateTags", TType.BOOL, (short)14);
  private static final TField NO_UPDATE_TAGS_FIELD_DESC = new TField("noUpdateTags", TType.BOOL, (short)15);
  private static final TField NO_EXPUNGE_TAGS_FIELD_DESC = new TField("noExpungeTags", TType.BOOL, (short)16);
  private static final TField NO_SET_PARENT_TAG_FIELD_DESC = new TField("noSetParentTag", TType.BOOL, (short)17);
  private static final TField NO_CREATE_SHARED_NOTEBOOKS_FIELD_DESC = new TField("noCreateSharedNotebooks", TType.BOOL, (short)18);
  private static final TField UPDATE_WHICH_SHARED_NOTEBOOK_RESTRICTIONS_FIELD_DESC = new TField("updateWhichSharedNotebookRestrictions", TType.I32, (short)19);
  private static final TField EXPUNGE_WHICH_SHARED_NOTEBOOK_RESTRICTIONS_FIELD_DESC = new TField("expungeWhichSharedNotebookRestrictions", TType.I32, (short)20);

  private boolean noReadNotes;
  private boolean noCreateNotes;
  private boolean noUpdateNotes;
  private boolean noExpungeNotes;
  private boolean noShareNotes;
  private boolean noEmailNotes;
  private boolean noSendMessageToRecipients;
  private boolean noUpdateNotebook;
  private boolean noExpungeNotebook;
  private boolean noSetDefaultNotebook;
  private boolean noSetNotebookStack;
  private boolean noPublishToPublic;
  private boolean noPublishToBusinessLibrary;
  private boolean noCreateTags;
  private boolean noUpdateTags;
  private boolean noExpungeTags;
  private boolean noSetParentTag;
  private boolean noCreateSharedNotebooks;
  private SharedNotebookInstanceRestrictions updateWhichSharedNotebookRestrictions;
  private SharedNotebookInstanceRestrictions expungeWhichSharedNotebookRestrictions;


  // isset id assignments
  private static final int __NOREADNOTES_ISSET_ID = 0;
  private static final int __NOCREATENOTES_ISSET_ID = 1;
  private static final int __NOUPDATENOTES_ISSET_ID = 2;
  private static final int __NOEXPUNGENOTES_ISSET_ID = 3;
  private static final int __NOSHARENOTES_ISSET_ID = 4;
  private static final int __NOEMAILNOTES_ISSET_ID = 5;
  private static final int __NOSENDMESSAGETORECIPIENTS_ISSET_ID = 6;
  private static final int __NOUPDATENOTEBOOK_ISSET_ID = 7;
  private static final int __NOEXPUNGENOTEBOOK_ISSET_ID = 8;
  private static final int __NOSETDEFAULTNOTEBOOK_ISSET_ID = 9;
  private static final int __NOSETNOTEBOOKSTACK_ISSET_ID = 10;
  private static final int __NOPUBLISHTOPUBLIC_ISSET_ID = 11;
  private static final int __NOPUBLISHTOBUSINESSLIBRARY_ISSET_ID = 12;
  private static final int __NOCREATETAGS_ISSET_ID = 13;
  private static final int __NOUPDATETAGS_ISSET_ID = 14;
  private static final int __NOEXPUNGETAGS_ISSET_ID = 15;
  private static final int __NOSETPARENTTAG_ISSET_ID = 16;
  private static final int __NOCREATESHAREDNOTEBOOKS_ISSET_ID = 17;
  private boolean[] __isset_vector = new boolean[18];

  public NotebookRestrictions() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public NotebookRestrictions(NotebookRestrictions other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    this.noReadNotes = other.noReadNotes;
    this.noCreateNotes = other.noCreateNotes;
    this.noUpdateNotes = other.noUpdateNotes;
    this.noExpungeNotes = other.noExpungeNotes;
    this.noShareNotes = other.noShareNotes;
    this.noEmailNotes = other.noEmailNotes;
    this.noSendMessageToRecipients = other.noSendMessageToRecipients;
    this.noUpdateNotebook = other.noUpdateNotebook;
    this.noExpungeNotebook = other.noExpungeNotebook;
    this.noSetDefaultNotebook = other.noSetDefaultNotebook;
    this.noSetNotebookStack = other.noSetNotebookStack;
    this.noPublishToPublic = other.noPublishToPublic;
    this.noPublishToBusinessLibrary = other.noPublishToBusinessLibrary;
    this.noCreateTags = other.noCreateTags;
    this.noUpdateTags = other.noUpdateTags;
    this.noExpungeTags = other.noExpungeTags;
    this.noSetParentTag = other.noSetParentTag;
    this.noCreateSharedNotebooks = other.noCreateSharedNotebooks;
    if (other.isSetUpdateWhichSharedNotebookRestrictions()) {
      this.updateWhichSharedNotebookRestrictions = other.updateWhichSharedNotebookRestrictions;
    }
    if (other.isSetExpungeWhichSharedNotebookRestrictions()) {
      this.expungeWhichSharedNotebookRestrictions = other.expungeWhichSharedNotebookRestrictions;
    }
  }

  public NotebookRestrictions deepCopy() {
    return new NotebookRestrictions(this);
  }

  public void clear() {
    setNoReadNotesIsSet(false);
    this.noReadNotes = false;
    setNoCreateNotesIsSet(false);
    this.noCreateNotes = false;
    setNoUpdateNotesIsSet(false);
    this.noUpdateNotes = false;
    setNoExpungeNotesIsSet(false);
    this.noExpungeNotes = false;
    setNoShareNotesIsSet(false);
    this.noShareNotes = false;
    setNoEmailNotesIsSet(false);
    this.noEmailNotes = false;
    setNoSendMessageToRecipientsIsSet(false);
    this.noSendMessageToRecipients = false;
    setNoUpdateNotebookIsSet(false);
    this.noUpdateNotebook = false;
    setNoExpungeNotebookIsSet(false);
    this.noExpungeNotebook = false;
    setNoSetDefaultNotebookIsSet(false);
    this.noSetDefaultNotebook = false;
    setNoSetNotebookStackIsSet(false);
    this.noSetNotebookStack = false;
    setNoPublishToPublicIsSet(false);
    this.noPublishToPublic = false;
    setNoPublishToBusinessLibraryIsSet(false);
    this.noPublishToBusinessLibrary = false;
    setNoCreateTagsIsSet(false);
    this.noCreateTags = false;
    setNoUpdateTagsIsSet(false);
    this.noUpdateTags = false;
    setNoExpungeTagsIsSet(false);
    this.noExpungeTags = false;
    setNoSetParentTagIsSet(false);
    this.noSetParentTag = false;
    setNoCreateSharedNotebooksIsSet(false);
    this.noCreateSharedNotebooks = false;
    this.updateWhichSharedNotebookRestrictions = null;
    this.expungeWhichSharedNotebookRestrictions = null;
  }

  public boolean isNoReadNotes() {
    return this.noReadNotes;
  }

  public void setNoReadNotes(boolean noReadNotes) {
    this.noReadNotes = noReadNotes;
    setNoReadNotesIsSet(true);
  }

  public void unsetNoReadNotes() {
    __isset_vector[__NOREADNOTES_ISSET_ID] = false;
  }

  /** Returns true if field noReadNotes is set (has been asigned a value) and false otherwise */
  public boolean isSetNoReadNotes() {
    return __isset_vector[__NOREADNOTES_ISSET_ID];
  }

  public void setNoReadNotesIsSet(boolean value) {
    __isset_vector[__NOREADNOTES_ISSET_ID] = value;
  }

  public boolean isNoCreateNotes() {
    return this.noCreateNotes;
  }

  public void setNoCreateNotes(boolean noCreateNotes) {
    this.noCreateNotes = noCreateNotes;
    setNoCreateNotesIsSet(true);
  }

  public void unsetNoCreateNotes() {
    __isset_vector[__NOCREATENOTES_ISSET_ID] = false;
  }

  /** Returns true if field noCreateNotes is set (has been asigned a value) and false otherwise */
  public boolean isSetNoCreateNotes() {
    return __isset_vector[__NOCREATENOTES_ISSET_ID];
  }

  public void setNoCreateNotesIsSet(boolean value) {
    __isset_vector[__NOCREATENOTES_ISSET_ID] = value;
  }

  public boolean isNoUpdateNotes() {
    return this.noUpdateNotes;
  }

  public void setNoUpdateNotes(boolean noUpdateNotes) {
    this.noUpdateNotes = noUpdateNotes;
    setNoUpdateNotesIsSet(true);
  }

  public void unsetNoUpdateNotes() {
    __isset_vector[__NOUPDATENOTES_ISSET_ID] = false;
  }

  /** Returns true if field noUpdateNotes is set (has been asigned a value) and false otherwise */
  public boolean isSetNoUpdateNotes() {
    return __isset_vector[__NOUPDATENOTES_ISSET_ID];
  }

  public void setNoUpdateNotesIsSet(boolean value) {
    __isset_vector[__NOUPDATENOTES_ISSET_ID] = value;
  }

  public boolean isNoExpungeNotes() {
    return this.noExpungeNotes;
  }

  public void setNoExpungeNotes(boolean noExpungeNotes) {
    this.noExpungeNotes = noExpungeNotes;
    setNoExpungeNotesIsSet(true);
  }

  public void unsetNoExpungeNotes() {
    __isset_vector[__NOEXPUNGENOTES_ISSET_ID] = false;
  }

  /** Returns true if field noExpungeNotes is set (has been asigned a value) and false otherwise */
  public boolean isSetNoExpungeNotes() {
    return __isset_vector[__NOEXPUNGENOTES_ISSET_ID];
  }

  public void setNoExpungeNotesIsSet(boolean value) {
    __isset_vector[__NOEXPUNGENOTES_ISSET_ID] = value;
  }

  public boolean isNoShareNotes() {
    return this.noShareNotes;
  }

  public void setNoShareNotes(boolean noShareNotes) {
    this.noShareNotes = noShareNotes;
    setNoShareNotesIsSet(true);
  }

  public void unsetNoShareNotes() {
    __isset_vector[__NOSHARENOTES_ISSET_ID] = false;
  }

  /** Returns true if field noShareNotes is set (has been asigned a value) and false otherwise */
  public boolean isSetNoShareNotes() {
    return __isset_vector[__NOSHARENOTES_ISSET_ID];
  }

  public void setNoShareNotesIsSet(boolean value) {
    __isset_vector[__NOSHARENOTES_ISSET_ID] = value;
  }

  public boolean isNoEmailNotes() {
    return this.noEmailNotes;
  }

  public void setNoEmailNotes(boolean noEmailNotes) {
    this.noEmailNotes = noEmailNotes;
    setNoEmailNotesIsSet(true);
  }

  public void unsetNoEmailNotes() {
    __isset_vector[__NOEMAILNOTES_ISSET_ID] = false;
  }

  /** Returns true if field noEmailNotes is set (has been asigned a value) and false otherwise */
  public boolean isSetNoEmailNotes() {
    return __isset_vector[__NOEMAILNOTES_ISSET_ID];
  }

  public void setNoEmailNotesIsSet(boolean value) {
    __isset_vector[__NOEMAILNOTES_ISSET_ID] = value;
  }

  public boolean isNoSendMessageToRecipients() {
    return this.noSendMessageToRecipients;
  }

  public void setNoSendMessageToRecipients(boolean noSendMessageToRecipients) {
    this.noSendMessageToRecipients = noSendMessageToRecipients;
    setNoSendMessageToRecipientsIsSet(true);
  }

  public void unsetNoSendMessageToRecipients() {
    __isset_vector[__NOSENDMESSAGETORECIPIENTS_ISSET_ID] = false;
  }

  /** Returns true if field noSendMessageToRecipients is set (has been asigned a value) and false otherwise */
  public boolean isSetNoSendMessageToRecipients() {
    return __isset_vector[__NOSENDMESSAGETORECIPIENTS_ISSET_ID];
  }

  public void setNoSendMessageToRecipientsIsSet(boolean value) {
    __isset_vector[__NOSENDMESSAGETORECIPIENTS_ISSET_ID] = value;
  }

  public boolean isNoUpdateNotebook() {
    return this.noUpdateNotebook;
  }

  public void setNoUpdateNotebook(boolean noUpdateNotebook) {
    this.noUpdateNotebook = noUpdateNotebook;
    setNoUpdateNotebookIsSet(true);
  }

  public void unsetNoUpdateNotebook() {
    __isset_vector[__NOUPDATENOTEBOOK_ISSET_ID] = false;
  }

  /** Returns true if field noUpdateNotebook is set (has been asigned a value) and false otherwise */
  public boolean isSetNoUpdateNotebook() {
    return __isset_vector[__NOUPDATENOTEBOOK_ISSET_ID];
  }

  public void setNoUpdateNotebookIsSet(boolean value) {
    __isset_vector[__NOUPDATENOTEBOOK_ISSET_ID] = value;
  }

  public boolean isNoExpungeNotebook() {
    return this.noExpungeNotebook;
  }

  public void setNoExpungeNotebook(boolean noExpungeNotebook) {
    this.noExpungeNotebook = noExpungeNotebook;
    setNoExpungeNotebookIsSet(true);
  }

  public void unsetNoExpungeNotebook() {
    __isset_vector[__NOEXPUNGENOTEBOOK_ISSET_ID] = false;
  }

  /** Returns true if field noExpungeNotebook is set (has been asigned a value) and false otherwise */
  public boolean isSetNoExpungeNotebook() {
    return __isset_vector[__NOEXPUNGENOTEBOOK_ISSET_ID];
  }

  public void setNoExpungeNotebookIsSet(boolean value) {
    __isset_vector[__NOEXPUNGENOTEBOOK_ISSET_ID] = value;
  }

  public boolean isNoSetDefaultNotebook() {
    return this.noSetDefaultNotebook;
  }

  public void setNoSetDefaultNotebook(boolean noSetDefaultNotebook) {
    this.noSetDefaultNotebook = noSetDefaultNotebook;
    setNoSetDefaultNotebookIsSet(true);
  }

  public void unsetNoSetDefaultNotebook() {
    __isset_vector[__NOSETDEFAULTNOTEBOOK_ISSET_ID] = false;
  }

  /** Returns true if field noSetDefaultNotebook is set (has been asigned a value) and false otherwise */
  public boolean isSetNoSetDefaultNotebook() {
    return __isset_vector[__NOSETDEFAULTNOTEBOOK_ISSET_ID];
  }

  public void setNoSetDefaultNotebookIsSet(boolean value) {
    __isset_vector[__NOSETDEFAULTNOTEBOOK_ISSET_ID] = value;
  }

  public boolean isNoSetNotebookStack() {
    return this.noSetNotebookStack;
  }

  public void setNoSetNotebookStack(boolean noSetNotebookStack) {
    this.noSetNotebookStack = noSetNotebookStack;
    setNoSetNotebookStackIsSet(true);
  }

  public void unsetNoSetNotebookStack() {
    __isset_vector[__NOSETNOTEBOOKSTACK_ISSET_ID] = false;
  }

  /** Returns true if field noSetNotebookStack is set (has been asigned a value) and false otherwise */
  public boolean isSetNoSetNotebookStack() {
    return __isset_vector[__NOSETNOTEBOOKSTACK_ISSET_ID];
  }

  public void setNoSetNotebookStackIsSet(boolean value) {
    __isset_vector[__NOSETNOTEBOOKSTACK_ISSET_ID] = value;
  }

  public boolean isNoPublishToPublic() {
    return this.noPublishToPublic;
  }

  public void setNoPublishToPublic(boolean noPublishToPublic) {
    this.noPublishToPublic = noPublishToPublic;
    setNoPublishToPublicIsSet(true);
  }

  public void unsetNoPublishToPublic() {
    __isset_vector[__NOPUBLISHTOPUBLIC_ISSET_ID] = false;
  }

  /** Returns true if field noPublishToPublic is set (has been asigned a value) and false otherwise */
  public boolean isSetNoPublishToPublic() {
    return __isset_vector[__NOPUBLISHTOPUBLIC_ISSET_ID];
  }

  public void setNoPublishToPublicIsSet(boolean value) {
    __isset_vector[__NOPUBLISHTOPUBLIC_ISSET_ID] = value;
  }

  public boolean isNoPublishToBusinessLibrary() {
    return this.noPublishToBusinessLibrary;
  }

  public void setNoPublishToBusinessLibrary(boolean noPublishToBusinessLibrary) {
    this.noPublishToBusinessLibrary = noPublishToBusinessLibrary;
    setNoPublishToBusinessLibraryIsSet(true);
  }

  public void unsetNoPublishToBusinessLibrary() {
    __isset_vector[__NOPUBLISHTOBUSINESSLIBRARY_ISSET_ID] = false;
  }

  /** Returns true if field noPublishToBusinessLibrary is set (has been asigned a value) and false otherwise */
  public boolean isSetNoPublishToBusinessLibrary() {
    return __isset_vector[__NOPUBLISHTOBUSINESSLIBRARY_ISSET_ID];
  }

  public void setNoPublishToBusinessLibraryIsSet(boolean value) {
    __isset_vector[__NOPUBLISHTOBUSINESSLIBRARY_ISSET_ID] = value;
  }

  public boolean isNoCreateTags() {
    return this.noCreateTags;
  }

  public void setNoCreateTags(boolean noCreateTags) {
    this.noCreateTags = noCreateTags;
    setNoCreateTagsIsSet(true);
  }

  public void unsetNoCreateTags() {
    __isset_vector[__NOCREATETAGS_ISSET_ID] = false;
  }

  /** Returns true if field noCreateTags is set (has been asigned a value) and false otherwise */
  public boolean isSetNoCreateTags() {
    return __isset_vector[__NOCREATETAGS_ISSET_ID];
  }

  public void setNoCreateTagsIsSet(boolean value) {
    __isset_vector[__NOCREATETAGS_ISSET_ID] = value;
  }

  public boolean isNoUpdateTags() {
    return this.noUpdateTags;
  }

  public void setNoUpdateTags(boolean noUpdateTags) {
    this.noUpdateTags = noUpdateTags;
    setNoUpdateTagsIsSet(true);
  }

  public void unsetNoUpdateTags() {
    __isset_vector[__NOUPDATETAGS_ISSET_ID] = false;
  }

  /** Returns true if field noUpdateTags is set (has been asigned a value) and false otherwise */
  public boolean isSetNoUpdateTags() {
    return __isset_vector[__NOUPDATETAGS_ISSET_ID];
  }

  public void setNoUpdateTagsIsSet(boolean value) {
    __isset_vector[__NOUPDATETAGS_ISSET_ID] = value;
  }

  public boolean isNoExpungeTags() {
    return this.noExpungeTags;
  }

  public void setNoExpungeTags(boolean noExpungeTags) {
    this.noExpungeTags = noExpungeTags;
    setNoExpungeTagsIsSet(true);
  }

  public void unsetNoExpungeTags() {
    __isset_vector[__NOEXPUNGETAGS_ISSET_ID] = false;
  }

  /** Returns true if field noExpungeTags is set (has been asigned a value) and false otherwise */
  public boolean isSetNoExpungeTags() {
    return __isset_vector[__NOEXPUNGETAGS_ISSET_ID];
  }

  public void setNoExpungeTagsIsSet(boolean value) {
    __isset_vector[__NOEXPUNGETAGS_ISSET_ID] = value;
  }

  public boolean isNoSetParentTag() {
    return this.noSetParentTag;
  }

  public void setNoSetParentTag(boolean noSetParentTag) {
    this.noSetParentTag = noSetParentTag;
    setNoSetParentTagIsSet(true);
  }

  public void unsetNoSetParentTag() {
    __isset_vector[__NOSETPARENTTAG_ISSET_ID] = false;
  }

  /** Returns true if field noSetParentTag is set (has been asigned a value) and false otherwise */
  public boolean isSetNoSetParentTag() {
    return __isset_vector[__NOSETPARENTTAG_ISSET_ID];
  }

  public void setNoSetParentTagIsSet(boolean value) {
    __isset_vector[__NOSETPARENTTAG_ISSET_ID] = value;
  }

  public boolean isNoCreateSharedNotebooks() {
    return this.noCreateSharedNotebooks;
  }

  public void setNoCreateSharedNotebooks(boolean noCreateSharedNotebooks) {
    this.noCreateSharedNotebooks = noCreateSharedNotebooks;
    setNoCreateSharedNotebooksIsSet(true);
  }

  public void unsetNoCreateSharedNotebooks() {
    __isset_vector[__NOCREATESHAREDNOTEBOOKS_ISSET_ID] = false;
  }

  /** Returns true if field noCreateSharedNotebooks is set (has been asigned a value) and false otherwise */
  public boolean isSetNoCreateSharedNotebooks() {
    return __isset_vector[__NOCREATESHAREDNOTEBOOKS_ISSET_ID];
  }

  public void setNoCreateSharedNotebooksIsSet(boolean value) {
    __isset_vector[__NOCREATESHAREDNOTEBOOKS_ISSET_ID] = value;
  }

  /**
   * 
   * @see SharedNotebookInstanceRestrictions
   */
  public SharedNotebookInstanceRestrictions getUpdateWhichSharedNotebookRestrictions() {
    return this.updateWhichSharedNotebookRestrictions;
  }

  /**
   * 
   * @see SharedNotebookInstanceRestrictions
   */
  public void setUpdateWhichSharedNotebookRestrictions(SharedNotebookInstanceRestrictions updateWhichSharedNotebookRestrictions) {
    this.updateWhichSharedNotebookRestrictions = updateWhichSharedNotebookRestrictions;
  }

  public void unsetUpdateWhichSharedNotebookRestrictions() {
    this.updateWhichSharedNotebookRestrictions = null;
  }

  /** Returns true if field updateWhichSharedNotebookRestrictions is set (has been asigned a value) and false otherwise */
  public boolean isSetUpdateWhichSharedNotebookRestrictions() {
    return this.updateWhichSharedNotebookRestrictions != null;
  }

  public void setUpdateWhichSharedNotebookRestrictionsIsSet(boolean value) {
    if (!value) {
      this.updateWhichSharedNotebookRestrictions = null;
    }
  }

  /**
   * 
   * @see SharedNotebookInstanceRestrictions
   */
  public SharedNotebookInstanceRestrictions getExpungeWhichSharedNotebookRestrictions() {
    return this.expungeWhichSharedNotebookRestrictions;
  }

  /**
   * 
   * @see SharedNotebookInstanceRestrictions
   */
  public void setExpungeWhichSharedNotebookRestrictions(SharedNotebookInstanceRestrictions expungeWhichSharedNotebookRestrictions) {
    this.expungeWhichSharedNotebookRestrictions = expungeWhichSharedNotebookRestrictions;
  }

  public void unsetExpungeWhichSharedNotebookRestrictions() {
    this.expungeWhichSharedNotebookRestrictions = null;
  }

  /** Returns true if field expungeWhichSharedNotebookRestrictions is set (has been asigned a value) and false otherwise */
  public boolean isSetExpungeWhichSharedNotebookRestrictions() {
    return this.expungeWhichSharedNotebookRestrictions != null;
  }

  public void setExpungeWhichSharedNotebookRestrictionsIsSet(boolean value) {
    if (!value) {
      this.expungeWhichSharedNotebookRestrictions = null;
    }
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof NotebookRestrictions)
      return this.equals((NotebookRestrictions)that);
    return false;
  }

  public boolean equals(NotebookRestrictions that) {
    if (that == null)
      return false;

    boolean this_present_noReadNotes = true && this.isSetNoReadNotes();
    boolean that_present_noReadNotes = true && that.isSetNoReadNotes();
    if (this_present_noReadNotes || that_present_noReadNotes) {
      if (!(this_present_noReadNotes && that_present_noReadNotes))
        return false;
      if (this.noReadNotes != that.noReadNotes)
        return false;
    }

    boolean this_present_noCreateNotes = true && this.isSetNoCreateNotes();
    boolean that_present_noCreateNotes = true && that.isSetNoCreateNotes();
    if (this_present_noCreateNotes || that_present_noCreateNotes) {
      if (!(this_present_noCreateNotes && that_present_noCreateNotes))
        return false;
      if (this.noCreateNotes != that.noCreateNotes)
        return false;
    }

    boolean this_present_noUpdateNotes = true && this.isSetNoUpdateNotes();
    boolean that_present_noUpdateNotes = true && that.isSetNoUpdateNotes();
    if (this_present_noUpdateNotes || that_present_noUpdateNotes) {
      if (!(this_present_noUpdateNotes && that_present_noUpdateNotes))
        return false;
      if (this.noUpdateNotes != that.noUpdateNotes)
        return false;
    }

    boolean this_present_noExpungeNotes = true && this.isSetNoExpungeNotes();
    boolean that_present_noExpungeNotes = true && that.isSetNoExpungeNotes();
    if (this_present_noExpungeNotes || that_present_noExpungeNotes) {
      if (!(this_present_noExpungeNotes && that_present_noExpungeNotes))
        return false;
      if (this.noExpungeNotes != that.noExpungeNotes)
        return false;
    }

    boolean this_present_noShareNotes = true && this.isSetNoShareNotes();
    boolean that_present_noShareNotes = true && that.isSetNoShareNotes();
    if (this_present_noShareNotes || that_present_noShareNotes) {
      if (!(this_present_noShareNotes && that_present_noShareNotes))
        return false;
      if (this.noShareNotes != that.noShareNotes)
        return false;
    }

    boolean this_present_noEmailNotes = true && this.isSetNoEmailNotes();
    boolean that_present_noEmailNotes = true && that.isSetNoEmailNotes();
    if (this_present_noEmailNotes || that_present_noEmailNotes) {
      if (!(this_present_noEmailNotes && that_present_noEmailNotes))
        return false;
      if (this.noEmailNotes != that.noEmailNotes)
        return false;
    }

    boolean this_present_noSendMessageToRecipients = true && this.isSetNoSendMessageToRecipients();
    boolean that_present_noSendMessageToRecipients = true && that.isSetNoSendMessageToRecipients();
    if (this_present_noSendMessageToRecipients || that_present_noSendMessageToRecipients) {
      if (!(this_present_noSendMessageToRecipients && that_present_noSendMessageToRecipients))
        return false;
      if (this.noSendMessageToRecipients != that.noSendMessageToRecipients)
        return false;
    }

    boolean this_present_noUpdateNotebook = true && this.isSetNoUpdateNotebook();
    boolean that_present_noUpdateNotebook = true && that.isSetNoUpdateNotebook();
    if (this_present_noUpdateNotebook || that_present_noUpdateNotebook) {
      if (!(this_present_noUpdateNotebook && that_present_noUpdateNotebook))
        return false;
      if (this.noUpdateNotebook != that.noUpdateNotebook)
        return false;
    }

    boolean this_present_noExpungeNotebook = true && this.isSetNoExpungeNotebook();
    boolean that_present_noExpungeNotebook = true && that.isSetNoExpungeNotebook();
    if (this_present_noExpungeNotebook || that_present_noExpungeNotebook) {
      if (!(this_present_noExpungeNotebook && that_present_noExpungeNotebook))
        return false;
      if (this.noExpungeNotebook != that.noExpungeNotebook)
        return false;
    }

    boolean this_present_noSetDefaultNotebook = true && this.isSetNoSetDefaultNotebook();
    boolean that_present_noSetDefaultNotebook = true && that.isSetNoSetDefaultNotebook();
    if (this_present_noSetDefaultNotebook || that_present_noSetDefaultNotebook) {
      if (!(this_present_noSetDefaultNotebook && that_present_noSetDefaultNotebook))
        return false;
      if (this.noSetDefaultNotebook != that.noSetDefaultNotebook)
        return false;
    }

    boolean this_present_noSetNotebookStack = true && this.isSetNoSetNotebookStack();
    boolean that_present_noSetNotebookStack = true && that.isSetNoSetNotebookStack();
    if (this_present_noSetNotebookStack || that_present_noSetNotebookStack) {
      if (!(this_present_noSetNotebookStack && that_present_noSetNotebookStack))
        return false;
      if (this.noSetNotebookStack != that.noSetNotebookStack)
        return false;
    }

    boolean this_present_noPublishToPublic = true && this.isSetNoPublishToPublic();
    boolean that_present_noPublishToPublic = true && that.isSetNoPublishToPublic();
    if (this_present_noPublishToPublic || that_present_noPublishToPublic) {
      if (!(this_present_noPublishToPublic && that_present_noPublishToPublic))
        return false;
      if (this.noPublishToPublic != that.noPublishToPublic)
        return false;
    }

    boolean this_present_noPublishToBusinessLibrary = true && this.isSetNoPublishToBusinessLibrary();
    boolean that_present_noPublishToBusinessLibrary = true && that.isSetNoPublishToBusinessLibrary();
    if (this_present_noPublishToBusinessLibrary || that_present_noPublishToBusinessLibrary) {
      if (!(this_present_noPublishToBusinessLibrary && that_present_noPublishToBusinessLibrary))
        return false;
      if (this.noPublishToBusinessLibrary != that.noPublishToBusinessLibrary)
        return false;
    }

    boolean this_present_noCreateTags = true && this.isSetNoCreateTags();
    boolean that_present_noCreateTags = true && that.isSetNoCreateTags();
    if (this_present_noCreateTags || that_present_noCreateTags) {
      if (!(this_present_noCreateTags && that_present_noCreateTags))
        return false;
      if (this.noCreateTags != that.noCreateTags)
        return false;
    }

    boolean this_present_noUpdateTags = true && this.isSetNoUpdateTags();
    boolean that_present_noUpdateTags = true && that.isSetNoUpdateTags();
    if (this_present_noUpdateTags || that_present_noUpdateTags) {
      if (!(this_present_noUpdateTags && that_present_noUpdateTags))
        return false;
      if (this.noUpdateTags != that.noUpdateTags)
        return false;
    }

    boolean this_present_noExpungeTags = true && this.isSetNoExpungeTags();
    boolean that_present_noExpungeTags = true && that.isSetNoExpungeTags();
    if (this_present_noExpungeTags || that_present_noExpungeTags) {
      if (!(this_present_noExpungeTags && that_present_noExpungeTags))
        return false;
      if (this.noExpungeTags != that.noExpungeTags)
        return false;
    }

    boolean this_present_noSetParentTag = true && this.isSetNoSetParentTag();
    boolean that_present_noSetParentTag = true && that.isSetNoSetParentTag();
    if (this_present_noSetParentTag || that_present_noSetParentTag) {
      if (!(this_present_noSetParentTag && that_present_noSetParentTag))
        return false;
      if (this.noSetParentTag != that.noSetParentTag)
        return false;
    }

    boolean this_present_noCreateSharedNotebooks = true && this.isSetNoCreateSharedNotebooks();
    boolean that_present_noCreateSharedNotebooks = true && that.isSetNoCreateSharedNotebooks();
    if (this_present_noCreateSharedNotebooks || that_present_noCreateSharedNotebooks) {
      if (!(this_present_noCreateSharedNotebooks && that_present_noCreateSharedNotebooks))
        return false;
      if (this.noCreateSharedNotebooks != that.noCreateSharedNotebooks)
        return false;
    }

    boolean this_present_updateWhichSharedNotebookRestrictions = true && this.isSetUpdateWhichSharedNotebookRestrictions();
    boolean that_present_updateWhichSharedNotebookRestrictions = true && that.isSetUpdateWhichSharedNotebookRestrictions();
    if (this_present_updateWhichSharedNotebookRestrictions || that_present_updateWhichSharedNotebookRestrictions) {
      if (!(this_present_updateWhichSharedNotebookRestrictions && that_present_updateWhichSharedNotebookRestrictions))
        return false;
      if (!this.updateWhichSharedNotebookRestrictions.equals(that.updateWhichSharedNotebookRestrictions))
        return false;
    }

    boolean this_present_expungeWhichSharedNotebookRestrictions = true && this.isSetExpungeWhichSharedNotebookRestrictions();
    boolean that_present_expungeWhichSharedNotebookRestrictions = true && that.isSetExpungeWhichSharedNotebookRestrictions();
    if (this_present_expungeWhichSharedNotebookRestrictions || that_present_expungeWhichSharedNotebookRestrictions) {
      if (!(this_present_expungeWhichSharedNotebookRestrictions && that_present_expungeWhichSharedNotebookRestrictions))
        return false;
      if (!this.expungeWhichSharedNotebookRestrictions.equals(that.expungeWhichSharedNotebookRestrictions))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(NotebookRestrictions other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    NotebookRestrictions typedOther = (NotebookRestrictions)other;

    lastComparison = Boolean.valueOf(isSetNoReadNotes()).compareTo(typedOther.isSetNoReadNotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoReadNotes()) {      lastComparison = TBaseHelper.compareTo(this.noReadNotes, typedOther.noReadNotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoCreateNotes()).compareTo(typedOther.isSetNoCreateNotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoCreateNotes()) {      lastComparison = TBaseHelper.compareTo(this.noCreateNotes, typedOther.noCreateNotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoUpdateNotes()).compareTo(typedOther.isSetNoUpdateNotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoUpdateNotes()) {      lastComparison = TBaseHelper.compareTo(this.noUpdateNotes, typedOther.noUpdateNotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoExpungeNotes()).compareTo(typedOther.isSetNoExpungeNotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoExpungeNotes()) {      lastComparison = TBaseHelper.compareTo(this.noExpungeNotes, typedOther.noExpungeNotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoShareNotes()).compareTo(typedOther.isSetNoShareNotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoShareNotes()) {      lastComparison = TBaseHelper.compareTo(this.noShareNotes, typedOther.noShareNotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoEmailNotes()).compareTo(typedOther.isSetNoEmailNotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoEmailNotes()) {      lastComparison = TBaseHelper.compareTo(this.noEmailNotes, typedOther.noEmailNotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoSendMessageToRecipients()).compareTo(typedOther.isSetNoSendMessageToRecipients());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoSendMessageToRecipients()) {      lastComparison = TBaseHelper.compareTo(this.noSendMessageToRecipients, typedOther.noSendMessageToRecipients);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoUpdateNotebook()).compareTo(typedOther.isSetNoUpdateNotebook());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoUpdateNotebook()) {      lastComparison = TBaseHelper.compareTo(this.noUpdateNotebook, typedOther.noUpdateNotebook);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoExpungeNotebook()).compareTo(typedOther.isSetNoExpungeNotebook());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoExpungeNotebook()) {      lastComparison = TBaseHelper.compareTo(this.noExpungeNotebook, typedOther.noExpungeNotebook);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoSetDefaultNotebook()).compareTo(typedOther.isSetNoSetDefaultNotebook());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoSetDefaultNotebook()) {      lastComparison = TBaseHelper.compareTo(this.noSetDefaultNotebook, typedOther.noSetDefaultNotebook);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoSetNotebookStack()).compareTo(typedOther.isSetNoSetNotebookStack());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoSetNotebookStack()) {      lastComparison = TBaseHelper.compareTo(this.noSetNotebookStack, typedOther.noSetNotebookStack);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoPublishToPublic()).compareTo(typedOther.isSetNoPublishToPublic());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoPublishToPublic()) {      lastComparison = TBaseHelper.compareTo(this.noPublishToPublic, typedOther.noPublishToPublic);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoPublishToBusinessLibrary()).compareTo(typedOther.isSetNoPublishToBusinessLibrary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoPublishToBusinessLibrary()) {      lastComparison = TBaseHelper.compareTo(this.noPublishToBusinessLibrary, typedOther.noPublishToBusinessLibrary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoCreateTags()).compareTo(typedOther.isSetNoCreateTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoCreateTags()) {      lastComparison = TBaseHelper.compareTo(this.noCreateTags, typedOther.noCreateTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoUpdateTags()).compareTo(typedOther.isSetNoUpdateTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoUpdateTags()) {      lastComparison = TBaseHelper.compareTo(this.noUpdateTags, typedOther.noUpdateTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoExpungeTags()).compareTo(typedOther.isSetNoExpungeTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoExpungeTags()) {      lastComparison = TBaseHelper.compareTo(this.noExpungeTags, typedOther.noExpungeTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoSetParentTag()).compareTo(typedOther.isSetNoSetParentTag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoSetParentTag()) {      lastComparison = TBaseHelper.compareTo(this.noSetParentTag, typedOther.noSetParentTag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNoCreateSharedNotebooks()).compareTo(typedOther.isSetNoCreateSharedNotebooks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoCreateSharedNotebooks()) {      lastComparison = TBaseHelper.compareTo(this.noCreateSharedNotebooks, typedOther.noCreateSharedNotebooks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateWhichSharedNotebookRestrictions()).compareTo(typedOther.isSetUpdateWhichSharedNotebookRestrictions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateWhichSharedNotebookRestrictions()) {      lastComparison = TBaseHelper.compareTo(this.updateWhichSharedNotebookRestrictions, typedOther.updateWhichSharedNotebookRestrictions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpungeWhichSharedNotebookRestrictions()).compareTo(typedOther.isSetExpungeWhichSharedNotebookRestrictions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpungeWhichSharedNotebookRestrictions()) {      lastComparison = TBaseHelper.compareTo(this.expungeWhichSharedNotebookRestrictions, typedOther.expungeWhichSharedNotebookRestrictions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // NO_READ_NOTES
          if (field.type == TType.BOOL) {
            this.noReadNotes = iprot.readBool();
            setNoReadNotesIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // NO_CREATE_NOTES
          if (field.type == TType.BOOL) {
            this.noCreateNotes = iprot.readBool();
            setNoCreateNotesIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // NO_UPDATE_NOTES
          if (field.type == TType.BOOL) {
            this.noUpdateNotes = iprot.readBool();
            setNoUpdateNotesIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // NO_EXPUNGE_NOTES
          if (field.type == TType.BOOL) {
            this.noExpungeNotes = iprot.readBool();
            setNoExpungeNotesIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // NO_SHARE_NOTES
          if (field.type == TType.BOOL) {
            this.noShareNotes = iprot.readBool();
            setNoShareNotesIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // NO_EMAIL_NOTES
          if (field.type == TType.BOOL) {
            this.noEmailNotes = iprot.readBool();
            setNoEmailNotesIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // NO_SEND_MESSAGE_TO_RECIPIENTS
          if (field.type == TType.BOOL) {
            this.noSendMessageToRecipients = iprot.readBool();
            setNoSendMessageToRecipientsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // NO_UPDATE_NOTEBOOK
          if (field.type == TType.BOOL) {
            this.noUpdateNotebook = iprot.readBool();
            setNoUpdateNotebookIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // NO_EXPUNGE_NOTEBOOK
          if (field.type == TType.BOOL) {
            this.noExpungeNotebook = iprot.readBool();
            setNoExpungeNotebookIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // NO_SET_DEFAULT_NOTEBOOK
          if (field.type == TType.BOOL) {
            this.noSetDefaultNotebook = iprot.readBool();
            setNoSetDefaultNotebookIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // NO_SET_NOTEBOOK_STACK
          if (field.type == TType.BOOL) {
            this.noSetNotebookStack = iprot.readBool();
            setNoSetNotebookStackIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // NO_PUBLISH_TO_PUBLIC
          if (field.type == TType.BOOL) {
            this.noPublishToPublic = iprot.readBool();
            setNoPublishToPublicIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // NO_PUBLISH_TO_BUSINESS_LIBRARY
          if (field.type == TType.BOOL) {
            this.noPublishToBusinessLibrary = iprot.readBool();
            setNoPublishToBusinessLibraryIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // NO_CREATE_TAGS
          if (field.type == TType.BOOL) {
            this.noCreateTags = iprot.readBool();
            setNoCreateTagsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // NO_UPDATE_TAGS
          if (field.type == TType.BOOL) {
            this.noUpdateTags = iprot.readBool();
            setNoUpdateTagsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // NO_EXPUNGE_TAGS
          if (field.type == TType.BOOL) {
            this.noExpungeTags = iprot.readBool();
            setNoExpungeTagsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // NO_SET_PARENT_TAG
          if (field.type == TType.BOOL) {
            this.noSetParentTag = iprot.readBool();
            setNoSetParentTagIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // NO_CREATE_SHARED_NOTEBOOKS
          if (field.type == TType.BOOL) {
            this.noCreateSharedNotebooks = iprot.readBool();
            setNoCreateSharedNotebooksIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // UPDATE_WHICH_SHARED_NOTEBOOK_RESTRICTIONS
          if (field.type == TType.I32) {
            this.updateWhichSharedNotebookRestrictions = SharedNotebookInstanceRestrictions.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // EXPUNGE_WHICH_SHARED_NOTEBOOK_RESTRICTIONS
          if (field.type == TType.I32) {
            this.expungeWhichSharedNotebookRestrictions = SharedNotebookInstanceRestrictions.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (isSetNoReadNotes()) {
      oprot.writeFieldBegin(NO_READ_NOTES_FIELD_DESC);
      oprot.writeBool(this.noReadNotes);
      oprot.writeFieldEnd();
    }
    if (isSetNoCreateNotes()) {
      oprot.writeFieldBegin(NO_CREATE_NOTES_FIELD_DESC);
      oprot.writeBool(this.noCreateNotes);
      oprot.writeFieldEnd();
    }
    if (isSetNoUpdateNotes()) {
      oprot.writeFieldBegin(NO_UPDATE_NOTES_FIELD_DESC);
      oprot.writeBool(this.noUpdateNotes);
      oprot.writeFieldEnd();
    }
    if (isSetNoExpungeNotes()) {
      oprot.writeFieldBegin(NO_EXPUNGE_NOTES_FIELD_DESC);
      oprot.writeBool(this.noExpungeNotes);
      oprot.writeFieldEnd();
    }
    if (isSetNoShareNotes()) {
      oprot.writeFieldBegin(NO_SHARE_NOTES_FIELD_DESC);
      oprot.writeBool(this.noShareNotes);
      oprot.writeFieldEnd();
    }
    if (isSetNoEmailNotes()) {
      oprot.writeFieldBegin(NO_EMAIL_NOTES_FIELD_DESC);
      oprot.writeBool(this.noEmailNotes);
      oprot.writeFieldEnd();
    }
    if (isSetNoSendMessageToRecipients()) {
      oprot.writeFieldBegin(NO_SEND_MESSAGE_TO_RECIPIENTS_FIELD_DESC);
      oprot.writeBool(this.noSendMessageToRecipients);
      oprot.writeFieldEnd();
    }
    if (isSetNoUpdateNotebook()) {
      oprot.writeFieldBegin(NO_UPDATE_NOTEBOOK_FIELD_DESC);
      oprot.writeBool(this.noUpdateNotebook);
      oprot.writeFieldEnd();
    }
    if (isSetNoExpungeNotebook()) {
      oprot.writeFieldBegin(NO_EXPUNGE_NOTEBOOK_FIELD_DESC);
      oprot.writeBool(this.noExpungeNotebook);
      oprot.writeFieldEnd();
    }
    if (isSetNoSetDefaultNotebook()) {
      oprot.writeFieldBegin(NO_SET_DEFAULT_NOTEBOOK_FIELD_DESC);
      oprot.writeBool(this.noSetDefaultNotebook);
      oprot.writeFieldEnd();
    }
    if (isSetNoSetNotebookStack()) {
      oprot.writeFieldBegin(NO_SET_NOTEBOOK_STACK_FIELD_DESC);
      oprot.writeBool(this.noSetNotebookStack);
      oprot.writeFieldEnd();
    }
    if (isSetNoPublishToPublic()) {
      oprot.writeFieldBegin(NO_PUBLISH_TO_PUBLIC_FIELD_DESC);
      oprot.writeBool(this.noPublishToPublic);
      oprot.writeFieldEnd();
    }
    if (isSetNoPublishToBusinessLibrary()) {
      oprot.writeFieldBegin(NO_PUBLISH_TO_BUSINESS_LIBRARY_FIELD_DESC);
      oprot.writeBool(this.noPublishToBusinessLibrary);
      oprot.writeFieldEnd();
    }
    if (isSetNoCreateTags()) {
      oprot.writeFieldBegin(NO_CREATE_TAGS_FIELD_DESC);
      oprot.writeBool(this.noCreateTags);
      oprot.writeFieldEnd();
    }
    if (isSetNoUpdateTags()) {
      oprot.writeFieldBegin(NO_UPDATE_TAGS_FIELD_DESC);
      oprot.writeBool(this.noUpdateTags);
      oprot.writeFieldEnd();
    }
    if (isSetNoExpungeTags()) {
      oprot.writeFieldBegin(NO_EXPUNGE_TAGS_FIELD_DESC);
      oprot.writeBool(this.noExpungeTags);
      oprot.writeFieldEnd();
    }
    if (isSetNoSetParentTag()) {
      oprot.writeFieldBegin(NO_SET_PARENT_TAG_FIELD_DESC);
      oprot.writeBool(this.noSetParentTag);
      oprot.writeFieldEnd();
    }
    if (isSetNoCreateSharedNotebooks()) {
      oprot.writeFieldBegin(NO_CREATE_SHARED_NOTEBOOKS_FIELD_DESC);
      oprot.writeBool(this.noCreateSharedNotebooks);
      oprot.writeFieldEnd();
    }
    if (this.updateWhichSharedNotebookRestrictions != null) {
      if (isSetUpdateWhichSharedNotebookRestrictions()) {
        oprot.writeFieldBegin(UPDATE_WHICH_SHARED_NOTEBOOK_RESTRICTIONS_FIELD_DESC);
        oprot.writeI32(this.updateWhichSharedNotebookRestrictions.getValue());
        oprot.writeFieldEnd();
      }
    }
    if (this.expungeWhichSharedNotebookRestrictions != null) {
      if (isSetExpungeWhichSharedNotebookRestrictions()) {
        oprot.writeFieldBegin(EXPUNGE_WHICH_SHARED_NOTEBOOK_RESTRICTIONS_FIELD_DESC);
        oprot.writeI32(this.expungeWhichSharedNotebookRestrictions.getValue());
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("NotebookRestrictions(");
    boolean first = true;

    if (isSetNoReadNotes()) {
      sb.append("noReadNotes:");
      sb.append(this.noReadNotes);
      first = false;
    }
    if (isSetNoCreateNotes()) {
      if (!first) sb.append(", ");
      sb.append("noCreateNotes:");
      sb.append(this.noCreateNotes);
      first = false;
    }
    if (isSetNoUpdateNotes()) {
      if (!first) sb.append(", ");
      sb.append("noUpdateNotes:");
      sb.append(this.noUpdateNotes);
      first = false;
    }
    if (isSetNoExpungeNotes()) {
      if (!first) sb.append(", ");
      sb.append("noExpungeNotes:");
      sb.append(this.noExpungeNotes);
      first = false;
    }
    if (isSetNoShareNotes()) {
      if (!first) sb.append(", ");
      sb.append("noShareNotes:");
      sb.append(this.noShareNotes);
      first = false;
    }
    if (isSetNoEmailNotes()) {
      if (!first) sb.append(", ");
      sb.append("noEmailNotes:");
      sb.append(this.noEmailNotes);
      first = false;
    }
    if (isSetNoSendMessageToRecipients()) {
      if (!first) sb.append(", ");
      sb.append("noSendMessageToRecipients:");
      sb.append(this.noSendMessageToRecipients);
      first = false;
    }
    if (isSetNoUpdateNotebook()) {
      if (!first) sb.append(", ");
      sb.append("noUpdateNotebook:");
      sb.append(this.noUpdateNotebook);
      first = false;
    }
    if (isSetNoExpungeNotebook()) {
      if (!first) sb.append(", ");
      sb.append("noExpungeNotebook:");
      sb.append(this.noExpungeNotebook);
      first = false;
    }
    if (isSetNoSetDefaultNotebook()) {
      if (!first) sb.append(", ");
      sb.append("noSetDefaultNotebook:");
      sb.append(this.noSetDefaultNotebook);
      first = false;
    }
    if (isSetNoSetNotebookStack()) {
      if (!first) sb.append(", ");
      sb.append("noSetNotebookStack:");
      sb.append(this.noSetNotebookStack);
      first = false;
    }
    if (isSetNoPublishToPublic()) {
      if (!first) sb.append(", ");
      sb.append("noPublishToPublic:");
      sb.append(this.noPublishToPublic);
      first = false;
    }
    if (isSetNoPublishToBusinessLibrary()) {
      if (!first) sb.append(", ");
      sb.append("noPublishToBusinessLibrary:");
      sb.append(this.noPublishToBusinessLibrary);
      first = false;
    }
    if (isSetNoCreateTags()) {
      if (!first) sb.append(", ");
      sb.append("noCreateTags:");
      sb.append(this.noCreateTags);
      first = false;
    }
    if (isSetNoUpdateTags()) {
      if (!first) sb.append(", ");
      sb.append("noUpdateTags:");
      sb.append(this.noUpdateTags);
      first = false;
    }
    if (isSetNoExpungeTags()) {
      if (!first) sb.append(", ");
      sb.append("noExpungeTags:");
      sb.append(this.noExpungeTags);
      first = false;
    }
    if (isSetNoSetParentTag()) {
      if (!first) sb.append(", ");
      sb.append("noSetParentTag:");
      sb.append(this.noSetParentTag);
      first = false;
    }
    if (isSetNoCreateSharedNotebooks()) {
      if (!first) sb.append(", ");
      sb.append("noCreateSharedNotebooks:");
      sb.append(this.noCreateSharedNotebooks);
      first = false;
    }
    if (isSetUpdateWhichSharedNotebookRestrictions()) {
      if (!first) sb.append(", ");
      sb.append("updateWhichSharedNotebookRestrictions:");
      if (this.updateWhichSharedNotebookRestrictions == null) {
        sb.append("null");
      } else {
        sb.append(this.updateWhichSharedNotebookRestrictions);
      }
      first = false;
    }
    if (isSetExpungeWhichSharedNotebookRestrictions()) {
      if (!first) sb.append(", ");
      sb.append("expungeWhichSharedNotebookRestrictions:");
      if (this.expungeWhichSharedNotebookRestrictions == null) {
        sb.append("null");
      } else {
        sb.append(this.expungeWhichSharedNotebookRestrictions);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

