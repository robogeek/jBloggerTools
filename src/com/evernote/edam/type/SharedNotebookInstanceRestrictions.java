/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.evernote.edam.type;


import java.util.Map;
import java.util.HashMap;
import com.evernote.thrift.TEnum;

/**
 * An enumeration describing restrictions on the domain of shared notebook
 * instances that are valid for a given operation, as used, for example, in
 * NotebookRestrictions.
 * 
 * ONLY_JOINED_OR_PREVIEW: The domain consists of shared notebooks that
 *   "belong" to the recipient or still available for preview by any recipient.
 *   Shared notebooks that the recipient has joined (the username has already been
 *   assigned to our user) are in the domain.  Additionally, shared notebooks
 *   that allow preview and have not yet been joined are in the domain.
 * 
 * NO_SHARED_NOTEBOOKS: No shared notebooks are applicable to the operation.
 */
public enum SharedNotebookInstanceRestrictions implements TEnum {
  ONLY_JOINED_OR_PREVIEW(1),
  NO_SHARED_NOTEBOOKS(2);

  private final int value;

  private SharedNotebookInstanceRestrictions(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static SharedNotebookInstanceRestrictions findByValue(int value) { 
    switch (value) {
      case 1:
        return ONLY_JOINED_OR_PREVIEW;
      case 2:
        return NO_SHARED_NOTEBOOKS;
      default:
        return null;
    }
  }
}
